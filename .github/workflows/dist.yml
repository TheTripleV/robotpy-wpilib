---
name: dist

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Black
      run: |
        python -m pip install black
        black --check --diff  .

  build:
    needs: [check]
    runs-on: ubuntu-latest

    steps:
    - name: Install build dependencies
      run: |
        echo "Placeholder done"

  ping-pyfrc:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - name: Ping pyfrc
      run: |
        curl -X POST https://api.github.com/repos/TheTripleV/pyfrc/dispatches \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -u ${{ secrets.PYFRC_ACCESS_TOKEN }} \
            --data '{"event_type": "tag", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "package_name": "wpilib"}}'



  # publish-pypi:
  #   runs-on: ubuntu-latest
  #   needs: [check, build]
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

  #   steps:
  #   - uses: actions/checkout@v1

  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.6-windows-latest-x86
  #       path: dist/

  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.6-windows-latest-x64
  #       path: dist/
    
  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.6-macos-latest-x64
  #       path: dist/

  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.7-windows-latest-x86
  #       path: dist/

  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.7-windows-latest-x64
  #       path: dist/
    
  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.7-macos-latest-x64
  #       path: dist/
    
  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.8-windows-latest-x86
  #       path: dist/

  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.8-windows-latest-x64
  #       path: dist/
      
  #   - uses: actions/download-artifact@v1
  #     with:
  #       name: dist-py3.8-macos-latest-x64
  #       path: dist/

  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.8

  #   - name: Install build dependencies
  #     run: python -m pip install 'robotpy-build>=2020.1.2'

  #   - name: Build sdist
  #     run: python setup.py sdist

  #   - name: Publish to PyPI
  #     uses: pypa/gh-action-pypi-publish@master
  #     with:
  #       user: __token__
  #       password: ${{ secrets.pypi_password }}